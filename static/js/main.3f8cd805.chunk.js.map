{"version":3,"sources":["redux/actionCreators.js","components/head/head.jsx","components/modal/modalHistory/modalHistory.jsx","components/modal/modalSetting/modalSetting.jsx","components/toDoList/toDoList.jsx","components/timer/buttonMode/buttonMode.jsx","components/timer/timerCount/timerCount.jsx","components/timer/timer.jsx","components/app/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["ModalCloase","name","type","payload","Head","activeMode","useSelector","state","mode","dispatch","useDispatch","document","body","style","backgroundColor","clazzBorder","clazzBtn","className","src","alt","onClick","ModalHistory","onModalClose","isOpened","modal","history","title","pomodoro","shortBreak","longBreak","ModalSetting","timeMode","settings","useState","newSettings","setNewSettings","onChange","e","time","target","value","shortBreack","href","ToDoList","tasks","ButtonMode","onDispatchChangeSettings","buttons","label","map","item","clazz","TimerCount","count","setCount","timerActive","settimerActive","format","minutes","Math","floor","seconds","String","length","padTime","useEffect","timer","setTimeout","c","clearTimeout","clazzBtnStartColor","Timer","clazzTimerColor","key","App","setting","initialState","autoPlay","text","numberPomodoro","login","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3f8cd805.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nexport let changeMode = (newMode) => ({\r\n    type: \"CHANGE-MODE\",\r\n    payload: newMode\r\n});\r\nexport let ModalOpenHistory = () => ({\r\n    type: \"MODAL-OPEN-HISTORY\"\r\n});\r\nexport let ModalOpenSetting = () => ({\r\n    type: \"MODAL-OPEN-SETTING\"\r\n});\r\nexport let ModalCloase = (name) => ({\r\n    type: \"MODAL-CLOASE\",\r\n    payload: name\r\n});\r\nexport let changeTimeModal = (newTime) => ({\r\n    type: \"CHANGE-TIME-MODAL\",\r\n    payload:newTime\r\n});\r\nexport let addHistoryPomodoro = () => ({\r\n    type: \"ADD-HISTORY-POMODORO\",\r\n});\r\nexport let addHistoryShortBreak = () => ({\r\n    type: \"ADD-HISTORY-SHORT-BREAK\",\r\n});\r\nexport let addHistoryLongBreak = () => ({\r\n    type: \"ADD-HISTORY-LONG-BREAK\",\r\n});\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport './head.css'\r\nimport {ModalOpenHistory,ModalOpenSetting} from '../../redux/actionCreators'\r\n\r\nconst Head =()=>{\r\n    const activeMode = useSelector(state=>state.mode);\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const onModalOpenHistory=()=>{\r\n        dispatch(ModalOpenHistory())\r\n    }\r\n    const onModalOpenSetting=()=>{\r\n        dispatch(ModalOpenSetting())\r\n    }\r\n    // установка цвета фона сайта \r\n    switch(activeMode){\r\n        case \"pomodoro\":\r\n            document.body.style.backgroundColor = \"#d95550\"\r\n                break;\r\n        case \"shortBreak\":\r\n            document.body.style.backgroundColor = \"#4c9195\"\r\n                break;\r\n        case \"longBreak\":\r\n            document.body.style.backgroundColor = \"#457ca3\"\r\n                break;\r\n        default:\r\n            document.body.style.backgroundColor = \"#d95550\"\r\n        }\r\n\r\n    let clazzBorder= '';\r\n    let clazzBtn= '';\r\n    switch(activeMode){\r\n        case \"shortBreak\":\r\n            clazzBorder = \"head head__blue\"\r\n            clazzBtn = 'btn btn__blue'\r\n                break;\r\n        case \"longBreak\":\r\n            clazzBorder = \"head head__navyBlue\"\r\n            clazzBtn = 'btn btn__navyBlue'\r\n                break;\r\n        default:\r\n            clazzBorder = \"head\"\r\n            clazzBtn = 'btn'\r\n    }\r\n\r\n\r\n    return(\r\n        \r\n        <div className={clazzBorder}>\r\n            <h2 className=\"head-title\"><img name=\"History\"src=\"https://pomofocus.io/icons/icon-white.png\" alt=\"\" /><span>P</span>omodorosTDL</h2>\r\n            <ul>\r\n                <li name=\"History\">\r\n                    <button onClick={onModalOpenHistory} className={clazzBtn} name=\"History\"type=\"submit\">\r\n                        <img name=\"History\"src=\"https://pomofocus.io/icons/graph-white.png\" alt=\"\" /> History\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button onClick={onModalOpenSetting} className={clazzBtn} name=\"Setting\" type=\"submit\">\r\n                        <img name=\"Setting\" src=\"https://pomofocus.io/icons/config-white.png\" alt=\"\" />  Setting\r\n                        </button>\r\n                </li> \r\n                <li>\r\n                    <button className={clazzBtn} name=\"Login\" type=\"submit\">\r\n                        <img name=\"Login\" src=\"https://pomofocus.io/icons/user-white.png\" alt=\"\" /> Login\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Head;","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport './modalHistory.css'\r\n\r\n\r\nconst ModalHistory = ({onModalClose}) =>{\r\n    const state = useSelector(state => state),\r\n        isOpened = state.modal.history.isOpened,\r\n        title =  state.modal.history.isOpened,\r\n        history= state.history;\r\n    return (\r\n        <div className={`modal__wrapper ${isOpened ? 'open' : 'close'}`}>\r\n            <div className=\"modal__body\">\r\n                <div className=\"modal__close\" onClick={onModalClose}>×</div>\r\n                <h2>{title}</h2>\r\n                <hr />\r\n                <div className='history-wraper'>\r\n                    <div className=\"history-mode\">\r\n                        <p>Pomodoro</p>\r\n                        <p>{history.pomodoro}</p>\r\n                    </div>\r\n                    <div className=\"history-mode\">\r\n                        <p>Short break</p>\r\n                        <p>{history.shortBreak}</p>\r\n                        \r\n                    </div>\r\n                    <div className=\"history-mode\">\r\n                        <p>Long break</p>\r\n                        <p>{history.longBreak}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalHistory;","import {useState} from 'react';\r\nimport React from 'react';\r\nimport './modalSetting.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {ModalCloase, changeTimeModal} from '../../../redux/actionCreators'\r\n\r\n\r\nconst ModalSetting = ({isOpened, title, }) =>{\r\n  const timeMode = useSelector(state=> state.settings)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newSettings,setNewSettings]= useState(timeMode)\r\n// меняем локальный state \r\n    const updateSettingPomodoro=(e)=>{\r\n        setNewSettings({...newSettings, pomodoro:{...newSettings.pomodoro, time:e.target.value}})\r\n    }\r\n    const updateSettingShortBreack=(e)=>{\r\n        setNewSettings({...newSettings, shortBreak:{...newSettings.shortBreack, time:e.target.value}})\r\n    }\r\n    const updateSettingLongBreack=(e)=>{\r\n        setNewSettings({...newSettings, longBreak:{...newSettings.longBreak, time:e.target.value}})\r\n    }\r\n\r\n//закрытие модального окна \r\n    const onModalClose=()=>{\r\n        dispatch(ModalCloase(title))\r\n    }\r\n// установка новых значений в таймер кнопка(ок)\r\n    let onUpdateTime=()=>{\r\n        onModalClose()\r\n        dispatch(changeTimeModal(newSettings))\r\n    }\r\n\r\n    return (\r\n        <div className={`modal__wrapper ${isOpened ? 'open' : 'close'}`}>\r\n            <div className=\"modal__body\">\r\n                <div className=\"modal__close\" onClick={onModalClose}>×</div>\r\n                <h2>{title}</h2>\r\n                <hr />\r\n                <div className='time-wrapper' >\r\n                    <h2>Time(minutes)</h2>\r\n                    <div className='time-block'>\r\n                        <div className=\"mode\">\r\n                            <p>Pomodoro</p>\r\n                            <input name='pomodoro' onChange={updateSettingPomodoro} type=\"number\" value={newSettings.pomodoro.time}  className=\"raz\"/>\r\n                        </div>\r\n                        <div className=\"mode\">\r\n                            <p>Short breack</p>\r\n                            <input name='shortBreak' onChange={updateSettingShortBreack} type=\"number\"  value={newSettings.shortBreak.time}  className=\"raz\"/>\r\n                        </div>\r\n                        <div className=\"mode\">\r\n                            <p>Long breack</p>\r\n                            <input name='longBreak' onChange={updateSettingLongBreack} type=\"number\"  value={newSettings.longBreak.time}  className=\"raz\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button onClick={onUpdateTime} href=\"/\" className=\"double-border-button\">OK</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ModalSetting;","import {useSelector, useDispatch} from 'react-redux'\r\nimport './toDoList.css'\r\n\r\n\r\nconst ToDoList =()=>{\r\n    const state = useSelector(state=>state),\r\n        dispatch = useDispatch(),\r\n        tasks = state.tasks;\r\n    \r\n\r\n\r\n    return(\r\n        <div className='tasks-wrapper'>\r\n            <div className='active-tasks'>\r\n\r\n            </div>\r\n            <button className='button-add-task'>+add task</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import {changeMode} from '../../../redux/actionCreators'\r\nimport './buttonMode.css'\r\n\r\nconst ButtonMode =({mode,dispatch})=>{\r\n\r\n    const onDispatchChangeSettings=(e)=>{\r\n        dispatch(changeMode(e.target.name))\r\n    }\r\n\r\n\r\n    const buttonData  =[\r\n        {name:'pomodoro', label:'Pomodoro'},\r\n        {name:'shortBreak', label:'Short Break'},\r\n        {name:'longBreak', label:'Long Break'}\r\n    ]\r\n    const buttons = buttonData.map(item =>{\r\n        const active = mode === item.name;\r\n        const clazz = active ? \"timer-btn__mode-active\" :  \"timer-btn__mode\";\r\n        return <button \r\n                onClick={onDispatchChangeSettings}\r\n                className={clazz}\r\n                name={item.name}\r\n                key = {item.name}\r\n                type=\"button\">\r\n                    {item.label}\r\n            </button>\r\n    })\r\n\r\n    return(\r\n        <div className=\"timer-btn\">\r\n            {buttons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonMode;","import {useEffect,useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport React from 'react'\r\nimport './timerCount.css'\r\nimport {addHistoryPomodoro,addHistoryLongBreak,addHistoryShortBreak} from '../../../redux/actionCreators'\r\n\r\nconst TimerCount =({settings, mode})=>{\r\n  const dispatch = useDispatch()\r\n\r\n  let timeMode;\r\n  \r\n  switch(mode){\r\n    case 'pomodoro':\r\n      timeMode = settings.pomodoro.time;\r\n      break\r\n    case 'shortBreak':\r\n      timeMode = settings.shortBreak.time;\r\n      break\r\n    case 'longBreak':\r\n      timeMode = settings.longBreak.time;\r\n      break\r\n    default: timeMode='';\r\n  }\r\n  \r\n\r\n  let [count,setCount] = useState(timeMode * 60);\r\n  let [timerActive, settimerActive] = useState(false);\r\n  \r\n      \r\n\r\n  const onToggleStart=()=>{settimerActive(state=>{return  !state})}\r\n\r\n  \r\n// ф-ция по добававлению 0 если длина читсла 1 \r\n  const padTime = time => {return String(time).length === 1 ? `0${time}` : `${time}`;};\r\n// форматирует время в MM:СС\r\n  const format = time => {\r\n      const minutes = Math.floor(time / 60);\r\n      const seconds = time % 60;\r\n      return `${minutes}:${padTime(seconds)}`;\r\n  };\r\n// окончание таймера запись в историю \r\n\r\n  useEffect(()=>{\r\n    if(count ===20){\r\n      if(mode === 'pomodoro'){\r\n        dispatch(addHistoryPomodoro())\r\n       }else if (mode === 'shortBreak'){\r\n         dispatch(addHistoryShortBreak())\r\n       }else if(mode === 'longBreak'){\r\n         dispatch(addHistoryLongBreak())\r\n       }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [count])\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (count > 0 && timerActive) {\r\n      timer = setTimeout(() => setCount(c => {\r\n        return c - 1;\r\n\r\n      }), 1000);\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [count, timerActive]);\r\n\r\n\r\n\r\n//стилизация кнопки старт let clazzTimerColor= 'timer';\r\n  let clazzBtnStartColor = 'timer-btn-start'\r\n  switch(mode){\r\n    case \"pomodoro\":\r\n      clazzBtnStartColor = \"timer-btn-start\";\r\n            break;\r\n    case \"shortBreak\":\r\n      clazzBtnStartColor = \"timer-btn-start blue\";\r\n            break;\r\n    case \"longBreak\":\r\n      clazzBtnStartColor = \"timer-btn-start navyBlue\";\r\n            break;\r\n    default:\r\n      clazzBtnStartColor = \"timer-btn-start\";\r\n  }\r\n  \r\n\r\n  return(\r\n        <>\r\n          <div className=\"timer-string\">{ count > 0 && timerActive ? format(count) : format(count)}</div>\r\n          <div className=\"\">\r\n              <button onClick={onToggleStart} className={clazzBtnStartColor}>{timerActive? \"stop\" : \"start\"}</button>\r\n          </div>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default TimerCount;","import { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport ButtonMode from \"./buttonMode/buttonMode\"\r\nimport TimerCount from \"./timerCount/timerCount\"\r\nimport './timer.css'\r\n\r\n\r\nconst Timer =()=>{\r\n\r\n    const {mode, settings} = useSelector(state=>state)\r\n    const dispatch = useDispatch()\r\n    //установка класса цвета timer \r\n    let clazzTimerColor= 'timer';\r\n    switch(mode){\r\n        case \"shortBreak\":\r\n            clazzTimerColor = \"timer timer__blue\";\r\n                break;\r\n        case \"longBreak\":\r\n            clazzTimerColor = \"timer timer__navyBlue\";\r\n                break;\r\n        default:\r\n            clazzTimerColor = \"timer\";\r\n    }\r\n    //костыль для обновления таймера при смене времени \r\n    let key = settings.pomodoro.time + settings.shortBreak.time + settings.longBreak.time;\r\n    return(\r\n        <div className={clazzTimerColor}>\r\n            <div className=\"timer-btn\">\r\n                <ButtonMode mode={mode}\r\n                dispatch={dispatch}/>\r\n            </div>\r\n            <TimerCount key={key} mode={mode} settings ={settings}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","\r\nimport Head from \"../head/head\"\r\nimport ModalHistory from '../modal/modalHistory/modalHistory';\r\nimport ModalSetting from '../modal/modalSetting/modalSetting';\r\nimport ToDoList from '../toDoList/toDoList';\r\nimport Timer from \"../timer/timer\"\r\nimport {ModalCloase} from '../../redux/actionCreators'\r\nimport './app.css';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport React from \"react\";\r\n\r\nconst  App =()=> {\r\n\r\nconst dispatch = useDispatch();\r\nconst state = useSelector(state=>state)\r\n\r\n    let modal= state.modal\r\n    \r\n\r\n    return (<>\r\n        <div className=\"container\">\r\n          <Head />\r\n          <div className=\"body\">\r\n            <Timer key={state.mode}/>\r\n            <ToDoList/>\r\n          </div>\r\n        </div>\r\n        <ModalHistory onModalClose={()=>{dispatch(ModalCloase(modal.history.title))}}/>\r\n        <ModalSetting isOpened={modal.setting.isOpened} title={modal.setting.title} />\r\n      </>)\r\n  \r\n}\r\n\r\nexport default App;\r\n","let initialState = {\r\n    settings: {\r\n        pomodoro: {\r\n            name: \"pomodoro\",\r\n            time: 25,\r\n        },\r\n        shortBreak: {\r\n            name: \"shortBreak\",\r\n            time: 5,\r\n        },\r\n        longBreak: {\r\n            name: \"longBreak\",\r\n            time: 10,\r\n        },\r\n        autoPlay:false\r\n    },\r\n    tasks:[\r\n        {text:'убраться в доме', numberPomodoro: 1},\r\n        {text:'сходить в магазин', numberPomodoro: 2},\r\n        {text:'учить js', numberPomodoro: 4},\r\n    ],\r\n    mode: \"pomodoro\",\r\n    modal:{\r\n        history:{\r\n            isOpened: false,\r\n            title: \"History\",},\r\n        setting:{\r\n            isOpened: false,\r\n            title: \"Setting\",},\r\n        login:{\r\n            isOpened: false,\r\n            title: \"Login\",\r\n        }\r\n    },\r\n    history:{\r\n        pomodoro:0,\r\n        shortBreak:0,\r\n        longBreak:0\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE-MODE\": {\r\n            return {...state, mode:action.payload}\r\n        }\r\n        case \"MODAL-OPEN-HISTORY\": {\r\n            return{...state, modal:{...state.modal, history:{...state.modal.history,isOpened:true}}}\r\n        }\r\n        case \"MODAL-OPEN-SETTING\": {\r\n            return{...state, modal:{...state.modal, setting:{...state.modal.setting,isOpened:true}}}\r\n        }\r\n        case \"MODAL-CLOASE\": {\r\n            return{...state, modal:{...state.modal, setting:{...state.modal.setting,isOpened:false},history:{...state.modal.history,isOpened:false}}}\r\n        }\r\n        case \"CHANGE-TIME-MODAL\": {\r\n            return{...state,settings:{...action.payload}}\r\n        }\r\n        case \"ADD-HISTORY-POMODORO\": {\r\n            return{...state,history:{...state.history, pomodoro:state.history.pomodoro + 1}}\r\n        }\r\n        case \"ADD-HISTORY-SHORT-BREAK\": {\r\n            return{...state,history:{...state.history, shortBreak:state.history.shortBreak + 1}}\r\n        }\r\n        case \"ADD-HISTORY-LONG-BREAK\": {\r\n            return{...state,history:{...state.history, longBreak:state.history.longBreak + 1}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from './reducer';\r\n\r\nlet store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nexport default store;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}